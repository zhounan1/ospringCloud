package com.aust.swaggerController;import org.springframework.http.HttpStatus;public class ResultEntity {    /**     * 返回状态码     */    private int status;    /**     * 返回消息     */    private String message;    /**     * 数据     */    private Object data;    public ResultEntity(int status, String message, Object data) {        this.status = status;        this.message = message;        this.data = data;    }    public ResultEntity() {    }    public static ResultEntity ofError(int status, String message) {        return new ResultEntity(status, message, null);    }    public static ResultEntity ofSuccess(String message, Object data) {        return new ResultEntity(200, message, data);    }    public static ResultEntity ofStatus(HttpStatus status, String message) {        return new ResultEntity(status.value(), message, null);    }    public static Builder builder() {        return new Builder();    }    public Builder toBuilder() {        return builder().withMessage(message)                .withStatus(status)                .withData(data);    }    public int getStatus() {        return status;    }    public void setStatus(int status) {        this.status = status;    }    public String getMessage() {        return message;    }    public void setMessage(String message) {        this.message = message;    }    public Object getData() {        return data;    }    public void setData(Object data) {        this.data = data;    }    public static final class Builder {        private int status;        private String message;        private Object data;        private Builder() {        }        public Builder withStatus(int status) {            this.status = status;            return this;        }        public Builder withMessage(String message) {            this.message = message;            return this;        }        public Builder withData(Object data) {            this.data = data;            return this;        }        public ResultEntity build() {            ResultEntity resultResponse = new ResultEntity();            resultResponse.setMessage(message);            resultResponse.setStatus(status);            resultResponse.setData(data);            return resultResponse;        }    }}